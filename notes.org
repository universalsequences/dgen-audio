#+title: Notes

* Target IR
** C
- each block goes into its own for loop inside the same process function
- thus, the TargetIR can output this so its really simple
- also lowering into one singular ~ScheduleItem~  + these for loops
- SIMD / Scalar can set the loops differently
- TargetIR can do things like "ADD_SIMD"
** Metal
- each block goes in its own kernel, thus they should all be in their own ~ScheduleItem~
* Items
- Renderer class with sub-classes for each device (i.e. ~MetalRenderer~  ), implement ~cg~ functions there
- more ops: switch
- fully renderer c file
- compilation
* Thoughts <2025-06-25 Wed>
- use range and endRange to deal with Scalar metal kernels
